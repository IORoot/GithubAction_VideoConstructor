# ╭──────────────────────────────────────────────────────────────────────────╮
# │                                                                          │░
# │                                                                          │░
# │                                 OUTPUTS                                  │░
# │                                                                          │░
# │                                                                          │░
# ╰░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░

name: Output

on:
    workflow_call:
        inputs:
            config_b64:
                type: string
                description: 'Base64 configuration for Video Constructor'     
                required: true


jobs:

    outputs:
        runs-on: ubuntu-latest
        continue-on-error: true
        steps:

              
            # ╭───────────────────────────────────────────────────────╮
            # │             GET CONTENTS OF CURRENT REPO              │
            # ╰───────────────────────────────────────────────────────╯
            - name: 🎛️ SETUP - Checkout Repo
              uses: actions/checkout@v3


            # ╭───────────────────────────────────────────────────────╮
            # │             JSON TO ENVIRONMENT VARIABLES             │
            # ╰───────────────────────────────────────────────────────╯
            - name: 🎛️ SETUP - JSON to Environment Variables
              run: |
                echo "${{ inputs.config_b64 }}" | base64 --decode > config.json
                ./scripts/env/json_to_env.sh 
                env

                
                
            # ╭───────────────────────────────────────────────────────╮
            # │       Install rClone to output to Google Drive        │
            # ╰───────────────────────────────────────────────────────╯
            - name: 📬 OUTPUTS - Install rClone
              if: ${{ env.VC_OUTPUT_OUTPUTS_GDRIVE_RUN }}
              run: |
                sudo apt install rclone
                echo "${{ secrets.RCLONE_CONF_B64 }}" | base64 --decode > rclone.conf
                cat rclone.conf
                ls -la


            # ╭───────────────────────────────────────────────────────╮
            # │       Install SSH/SSHPass for saving to server        │
            # ╰───────────────────────────────────────────────────────╯
            - name: 📬 OUTPUTS - Install ssh/sshpass
              if: ${{ env.VC_OUTPUTS_SSH_RUN }}
              run: |
                sudo apt-get install --no-install-recommends ssh sshpass



            # ╭───────────────────────────────────────────────────────╮
            # │           Copy specific files into uploads              │
            # ╰───────────────────────────────────────────────────────╯
            - name: 📬 OUTPUTS - Create uploads folder
              run: |
                mkdir -p ${GITHUB_WORKSPACE}/uploads
                cp ${{ env.VC_OUTPUT_INCLUDE }} ${GITHUB_WORKSPACE}/uploads || true
                ls -la uploads



            # ╭───────────────────────────────────────────────────────╮
            # │                  Run outputs script                   │
            # ╰───────────────────────────────────────────────────────╯
            - name: 📬 OUTPUTS - Run Outputs
              continue-on-error: true
              run: |
                cat config.json | jq -r '.output.outputs' > ${GITHUB_WORKSPACE}/output_config.json
                cat ./output_config.json
                ./scripts/outputs/outputs.sh \
                    --json ${GITHUB_WORKSPACE}/output_config.json \
                    --rclone ./rclone.conf \
                    --sshuser ${{ secrets.SSH_USER }} \
                    --sshpass ${{ secrets.SSH_PASS }}



            # ╭──────────────────────────────────────────────────────────────────────────╮
            # │                                                                          │░
            # │                                                                          │░
            # │                               ARTIFACTS                                  │░
            # │                                                                          │░
            # │                                                                          │░
            # ╰░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░


            # NOTE - UPLOADS/DOWNLOADS Start in the ROOT folder, NOT ${GITHUB_WORKSPACE}
            # Give full path to file for it to work.
            - name: 📦 ARTIFACTS - Upload ./uploads folder as artifact if Upload to outputs Fails
              uses: actions/upload-artifact@v3
              with:
                name: uploads
                path: /home/runner/work/GithubAction_VideoConstructor/GithubAction_VideoConstructor/uploads/
                



            # ╭──────────────────────────────────────────────────────────────────────────╮
            # │                                                                          │░
            # │                                                                          │░
            # │                                DEBUGGERS                                 │░
            # │                                                                          │░
            # │                                                                          │░
            # ╰░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░

            # ╭───────────────────────────────────────────────────────╮
            # │                         HTTP                          │
            # ╰───────────────────────────────────────────────────────╯
            # - uses: dsmirc/ngrok-tunnel-action@cd
            #   name: 🪲 DEBUG - Setup NGROK Tunnel
            #   with:
            #     timeout: 1h
            #     port: 8080
            #     ngrok_authtoken: ${{ secrets.NGROK_AUTH_TOKEN }}
            #     tunnel_type: http
            #     save_url_to_filename: tunnelURL.md

            # # ╭───────────────────────────────────────────────────────╮
            # # │                          SSH                          │
            # # ╰───────────────────────────────────────────────────────╯
            # - name: 🪲 DEBUG - Setup upterm session
            #   uses: lhotari/action-upterm@v1

               