# ╭──────────────────────────────────────────────────────────────────────────╮
# │                                                                          │░
# │                                                                          │░
# │                               GENERATORS                                 │░
# │                                                                          │░
# │                                                                          │░
# ╰░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░

name: 🏞️ Generators

on:
    workflow_call:
        inputs:
            config_b64:
                type: string
                description: 'Base64 configuration for Video Constructor'     
                required: true


jobs:

    generators:
        runs-on: ubuntu-latest
        continue-on-error: true
        steps:

              
            # ╭───────────────────────────────────────────────────────╮
            # │             GET CONTENTS OF CURRENT REPO              │
            # ╰───────────────────────────────────────────────────────╯
            - name: 🎛️ SETUP - Checkout Repo
              uses: actions/checkout@v3


            # ╭───────────────────────────────────────────────────────╮
            # │      DECODE THE BASE64 SECRETS READY TO BE USED       │
            # ╰───────────────────────────────────────────────────────╯
            - name: 🎛️ SETUP - Base64 decode secrets
              run: |
                echo "${{ secrets.MIDJOURNEY_ENV_B64 }}" | base64 --decode > midjourney.env.conf


              
            # ╭───────────────────────────────────────────────────────╮
            # │             JSON TO ENVIRONMENT VARIABLES             │
            # ╰───────────────────────────────────────────────────────╯
            - name: 🎛️ SETUP - JSON to Environment Variables
              run: |
                # Default base64 config
                echo "${{ inputs.config_b64 }}" | base64 --decode > config.json
                ./scripts/env/json_to_env.sh 



            # ╭───────────────────────────────────────────────────────╮
            # │                      Setup Node                       │
            # ╰───────────────────────────────────────────────────────╯
            - uses: actions/setup-node@v3.6.0
              with:
                node-version: "18.x"



            # ╭───────────────────────────────────────────────────────╮
            # │                    Setup Midjourney                   │
            # ╰───────────────────────────────────────────────────────╯
            - name: 🏞️ Generate - Setup Midjourney
              run: |
                  env
                  sudo git clone https://github.com/IORoot/MidjourneyAPI ${GITHUB_WORKSPACE}/midjourney
                  sudo chown -Rf runner:docker midjourney
                  cp midjourney.env.conf ${GITHUB_WORKSPACE}/midjourney/.env
                  cat config.json | jq -r '.generate.generators' > ./config_generate.json
                  cd midjourney
                  npm install
                  cat ${GITHUB_WORKSPACE}/config.json | jq -r '.generate.generators' > ./config_generators.json
                  mkdir -p ${GITHUB_WORKSPACE}/generators



            # ╭───────────────────────────────────────────────────────╮
            # │                  RUN THE GENERATORS                   │
            # ╰───────────────────────────────────────────────────────╯
            - name: 🏞️ Generate - Run Generator
              continue-on-error: true
              run: |
                ./scripts/generate/generate.sh --json ${GITHUB_WORKSPACE}/config_generate.json
                ls -la



            # ╭───────────────────────────────────────────────────────╮
            # │           Upload the overlays as artifacts            │
            # ╰───────────────────────────────────────────────────────╯
            # NOTE - UPLOADS/DOWNLOADS Start in the ROOT folder, NOT ${GITHUB_WORKSPACE}
            # Give full path to file for it to work.
            - name: 🆙 Upload file as artifact
              uses: actions/upload-artifact@v4
              with:
                name: generators
                path: /home/runner/work/GithubAction_VideoConstructor/GithubAction_VideoConstructor/assets
                



            # ╭──────────────────────────────────────────────────────────────────────────╮
            # │                                                                          │░
            # │                                                                          │░
            # │                                DEBUGGERS                                 │░
            # │                                                                          │░
            # │                                                                          │░
            # ╰░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░

            # ╭───────────────────────────────────────────────────────╮
            # │                         HTTP                          │
            # ╰───────────────────────────────────────────────────────╯
            # - uses: dsmirc/ngrok-tunnel-action@cd
            #   name: 🪲 DEBUG - Setup NGROK Tunnel
            #   with:
            #     timeout: 1h
            #     port: 8080
            #     ngrok_authtoken: ${{ secrets.NGROK_AUTH_TOKEN }}
            #     tunnel_type: http
            #     save_url_to_filename: tunnelURL.md

            # # ╭───────────────────────────────────────────────────────╮
            # # │                          SSH                          │
            # # ╰───────────────────────────────────────────────────────╯
            # - name: 🪲 DEBUG - Setup upterm session
            #   uses: lhotari/action-upterm@v1

               