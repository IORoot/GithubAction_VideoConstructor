# ╭──────────────────────────────────────────────────────────────────────────╮
# │                                                                          │░
# │                                                                          │░
# │                               Downloader                                 │░
# │                                                                          │░
# │                                                                          │░
# ╰░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░

name: 📹 Download

on:
    workflow_call:
        inputs:
            config_b64:
                type: string
                description: 'Base64 configuration for Video Constructor'     
                required: true


jobs:

    downloader:
        runs-on: ubuntu-latest
        continue-on-error: true
        steps:

              
            # ╭───────────────────────────────────────────────────────╮
            # │             GET CONTENTS OF CURRENT REPO              │
            # ╰───────────────────────────────────────────────────────╯
            - name: 🎛️ SETUP - Checkout Repo
              uses: actions/checkout@v3



            # ╭───────────────────────────────────────────────────────╮
            # │      DECODE THE BASE64 CONFIGS READY TO BE USED       │
            # ╰───────────────────────────────────────────────────────╯
            - name: 🎛️ SETUP - Base64 decode Configs
              run: |
                echo "${{ secrets.RCLONE_CONF_B64 }}" | base64 --decode > rclone.conf
                cat rclone.conf
                ls -la


            # ╭───────────────────────────────────────────────────────╮
            # │             JSON TO ENVIRONMENT VARIABLES             │
            # ╰───────────────────────────────────────────────────────╯
            - name: 🎛️ SETUP - JSON to Environment Variables
              run: |
                # Default base64 config
                echo "${{ inputs.config_b64 }}" | base64 --decode > config.json
                ./scripts/env/json_to_env.sh 



            # ╭───────────────────────────────────────────────────────╮
            # │                      Setup Node                       │
            # ╰───────────────────────────────────────────────────────╯
            - uses: actions/setup-node@v3.6.0
              with:
                node-version: "18.x"



            # ╭───────────────────────────────────────────────────────╮
            # │                    Install FFMPEG                     │
            # ╰───────────────────────────────────────────────────────╯
            - name: 🎛️ SETUP - Install FFMPEG
              uses: FedericoCarboni/setup-ffmpeg@v2
 
            - name: 🎛️ SETUP - Link FFMPEG to /usr/local/bin
              run: |
                cd /usr/local/bin
                env
                ln -s /opt/hostedtoolcache/ffmpeg/*/x64/ffmpeg ./ffmpeg
                ln -s /opt/hostedtoolcache/ffmpeg/*/x64/ffprobe ./ffprobe 



            # ╭───────────────────────────────────────────────────────╮
            # │                    INSTALL YT-DLP                     │
            # ╰───────────────────────────────────────────────────────╯
            - name: 🔎 SEARCH - Install yt-dlp
              run: sudo pip install yt-dlp



            # ╭───────────────────────────────────────────────────────╮
            # │                     INSTALL MPV                       │
            # ╰───────────────────────────────────────────────────────╯
            - name: 📹 DOWNLOAD - Install mpv
              run: |
                sudo apt-get update
                sudo apt-get install --no-install-recommends mpv
            


            # ╭───────────────────────────────────────────────────────╮
            # │                    Install rClone                     │
            # ╰───────────────────────────────────────────────────────╯
            - name: 📹 DOWNLOAD - Install rClone
              run: |
                sudo apt install rclone

            # ╭───────────────────────────────────────────────────────╮
            # │                          SSH                          │
            # ╰───────────────────────────────────────────────────────╯
            - name: 🪲 DEBUG - Setup upterm session
              uses: lhotari/action-upterm@v1

            # ╭───────────────────────────────────────────────────────╮
            # │                  RUN THE DOWNLOADER                   │
            # ╰───────────────────────────────────────────────────────╯
            ##
            ## INPUT = videoid_results.json
            ## OUTPUT = MP4 Video files
            ##
            - name: 📹 DOWNLOAD - Run Downloader
              run: |
                cat config.json | jq -r '.download.downloads' > ./config_download.json
                cat ./config_download.json
                ./scripts/download/download.sh \
                    --json ${GITHUB_WORKSPACE}/config_download.json \
                    --searchresults ${GITHUB_WORKSPACE}/search_results.json \
                    --rclone ./rclone.conf
              
                mkdir -p assets
                
                find . -maxdepth 1 -iname "*.mp4" -exec cp {} assets/ \; || true
                find . -maxdepth 1 -iname "*.avi" -exec cp {} assets/ \; || true
                find . -maxdepth 1 -iname "*.mkv" -exec cp {} assets/ \; || true
                find . -maxdepth 1 -iname "*.mov" -exec cp {} assets/ \; || true
                find . -maxdepth 1 -iname "*.flv" -exec cp {} assets/ \; || true

                ls -la
                ls -la assets



            # ╭───────────────────────────────────────────────────────╮
            # │           Upload the overlays as artifacts            │
            # ╰───────────────────────────────────────────────────────╯
            # NOTE - UPLOADS/DOWNLOADS Start in the ROOT folder, NOT ${GITHUB_WORKSPACE}
            # Give full path to file for it to work.
            - name: 🆙 Upload file as artifact
              uses: actions/upload-artifact@v4
              with:
                name: downloads
                path: /home/runner/work/GithubAction_VideoConstructor/GithubAction_VideoConstructor/assets
                


            # ╭──────────────────────────────────────────────────────────────────────────╮
            # │                                                                          │░
            # │                                                                          │░
            # │                                DEBUGGERS                                 │░
            # │                                                                          │░
            # │                                                                          │░
            # ╰░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░

            # ╭───────────────────────────────────────────────────────╮
            # │                         HTTP                          │
            # ╰───────────────────────────────────────────────────────╯
            # - uses: dsmirc/ngrok-tunnel-action@cd
            #   name: 🪲 DEBUG - Setup NGROK Tunnel
            #   with:
            #     timeout: 1h
            #     port: 8080
            #     ngrok_authtoken: ${{ secrets.NGROK_AUTH_TOKEN }}
            #     tunnel_type: http
            #     save_url_to_filename: tunnelURL.md

            # # ╭───────────────────────────────────────────────────────╮
            # # │                          SSH                          │
            # # ╰───────────────────────────────────────────────────────╯
            # - name: 🪲 DEBUG - Setup upterm session
            #   uses: lhotari/action-upterm@v1

               